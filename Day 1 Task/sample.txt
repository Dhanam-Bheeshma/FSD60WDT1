Microsoft Windows [Version 10.0.22631.3447]
(c) Microsoft Corporation. All rights reserved.

D:\Dev\FSD60Dev\Day 1 Task>echo "# FSD60WDT1" >> README.md

D:\Dev\FSD60Dev\Day 1 Task>git init
Initialized empty Git repository in D:/Dev/FSD60Dev/Day 1 Task/.git/

D:\Dev\FSD60Dev\Day 1 Task>git stATUS
git: 'stATUS' is not a git command. See 'git --help'.

D:\Dev\FSD60Dev\Day 1 Task>git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        README.md
        sample.txt
        this.txt

nothing added to commit but untracked files present (use "git add" to track)

D:\Dev\FSD60Dev\Day 1 Task>git add README.md

D:\Dev\FSD60Dev\Day 1 Task>git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   README.md

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        sample.txt
        this.txt


D:\Dev\FSD60Dev\Day 1 Task>git add .

D:\Dev\FSD60Dev\Day 1 Task>git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   README.md
        new file:   sample.txt
        new file:   this.txt


D:\Dev\FSD60Dev\Day 1 Task>git rm --cached <file>
The syntax of the command is incorrect.

D:\Dev\FSD60Dev\Day 1 Task>git rm --cached
fatal: No pathspec was given. Which files should I remove?

D:\Dev\FSD60Dev\Day 1 Task>git commit -m "first commit"
[master (root-commit) d08be68] first commit
 3 files changed, 55 insertions(+)
 create mode 100644 README.md
 create mode 100644 sample.txt
 create mode 100644 this.txt

D:\Dev\FSD60Dev\Day 1 Task>git status
On branch master
nothing to commit, working tree clean

D:\Dev\FSD60Dev\Day 1 Task>git branch -M main

D:\Dev\FSD60Dev\Day 1 Task>git status
On branch main
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   sample.txt

no changes added to commit (use "git add" and/or "git commit -a")

D:\Dev\FSD60Dev\Day 1 Task>git add .

D:\Dev\FSD60Dev\Day 1 Task>git remote add origin https://github.com/Dhanam-Bheeshma/FSD60WDT1.gitgit status
usage: git remote add [<options>] <name> <url>

    -f, --[no-]fetch      fetch the remote branches
    --[no-]tags           import all tags and associated objects when fetching
                          or do not fetch any tag at all (--no-tags)
    -t, --[no-]track <branch>
                          branch(es) to track
    -m, --[no-]master <branch>
                          master branch
    --[no-]mirror[=(push|fetch)]
                          set up remote as a mirror to push to or fetch from


D:\Dev\FSD60Dev\Day 1 Task>git push -u origin main
fatal: 'origin' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.

D:\Dev\FSD60Dev\Day 1 Task>git status
On branch main
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   sample.txt


D:\Dev\FSD60Dev\Day 1 Task>git remote add origin https://github.com/Dhanam-Bheeshma/FSD60WDT1.git

D:\Dev\FSD60Dev\Day 1 Task>git status
On branch main
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   sample.txt


D:\Dev\FSD60Dev\Day 1 Task>git remote -v
origin  https://github.com/Dhanam-Bheeshma/FSD60WDT1.git (fetch)
origin  https://github.com/Dhanam-Bheeshma/FSD60WDT1.git (push)

D:\Dev\FSD60Dev\Day 1 Task>git branch -M main

D:\Dev\FSD60Dev\Day 1 Task>git status
On branch main
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   sample.txt


D:\Dev\FSD60Dev\Day 1 Task>git push -u origin main
To https://github.com/Dhanam-Bheeshma/FSD60WDT1.git
 ! [rejected]        main -> main (fetch first)
error: failed to push some refs to 'https://github.com/Dhanam-Bheeshma/FSD60WDT1.git'
hint: Updates were rejected because the remote contains work that you do not
hint: have locally. This is usually caused by another repository pushing to
hint: the same ref. If you want to integrate the remote changes, use
hint: 'git pull' before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.

D:\Dev\FSD60Dev\Day 1 Task>